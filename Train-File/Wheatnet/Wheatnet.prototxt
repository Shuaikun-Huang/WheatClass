name: "RA_CNN"
#######Scale1#######
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "D:\\Profiles\\Huang-project\\WheatClass\\Train-File\\Wheatnet_img\\trainimgmean.binaryproto"
  }
  data_param {
    source: "D:\\Profiles\\Huang-project\\WheatClass\\Train-File\\Wheatnet_img\\trainldb"
    batch_size: 30
    backend: LEVELDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
	mean_file: "D:\\Profiles\\Huang-project\\WheatClass\\Train-File\\Wheatnet_img\\valimgmean.binaryproto"
  }
  data_param {
    source: "D:\\Profiles\\Huang-project\\WheatClass\\Train-File\\Wheatnet_img\\valldb"
    batch_size: 30
    backend: LEVELDB
  }
}
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  } 
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  } 
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  } 
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  } 
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  } 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  } 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "conv3_4"
  name: "conv3_4"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3_4"
  top: "conv3_4"
  name: "relu3_4"
  type: "ReLU"
}
layer {
  bottom: "conv3_4"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "conv4_4"
  name: "conv4_4"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv4_4"
  top: "conv4_4"
  name: "relu4_4"
  type: "ReLU"
}
layer {
  bottom: "conv4_4"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  param {
    lr_mult: 3
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "conv5_4"
  name: "conv5_4"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv5_4"
  top: "conv5_4"
  name: "relu5_4"
  type: "ReLU"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_4"
  top: "pool5"
  pooling_param {
    pool: AVE
    kernel_size: 28
    stride: 28
  }
}
#######APN1#######
layer {
  bottom: "conv5_4"
  top: "anp_pool"
  name: "anp_pool"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "get_abc1_wheat"
  type: "InnerProduct"
  bottom: "anp_pool"
  top: "get_abc1_wheat"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "tanh"
  bottom: "get_abc1_wheat"
  top: "tanh"
  type: "TanH"
}
layer {
  name: "get_abc2_wheat"
  type: "InnerProduct"
  bottom: "tanh"
  top: "get_abc2_wheat"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "sigmoid"
  bottom: "get_abc2_wheat"
  top: "sig_abc"
  type: "Sigmoid"
}
#######Scale2#######
layer {
  name: "get448"
  bottom: "sig_abc"
  top: "get448"
  type: "Power"
  power_param {
    power: 1
    scale: 227
    shift: 0
  }
}
layer{
  name: "atten_crop"
  bottom: "data"
  bottom: "get448"
  top: "scale2_data"
  type: "AttentionCrop"
}
layer {
  bottom: "scale2_data"
  top: "conv1_1_A"
  name: "conv1_1_A"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 3
    decay_mult: 0
  } 
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_1_A"
  top: "conv1_1_A"
  name: "relu1_1_A"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_A"
  top: "conv1_2_A_wheat"
  name: "conv1_2_A_wheat"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  } 
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 9
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1_2_A_wheat"
  top: "conv1_2_A_wheat"
  name: "relu1_2_A_wheat"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_A_wheat"
  top: "pool1_A_wheat"
  name: "pool1_A_wheat"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 6
    stride: 6
  }
}
layer {
  bottom: "pool1_A_wheat"
  top: "conv2_1_A_wheat"
  name: "conv2_1_A_wheat"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 3
    decay_mult: 0
  } 
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 13
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_1_A_wheat"
  top: "conv2_1_A_wheat"
  name: "relu2_1_A_wheat"
  type: "ReLU"
}
layer {
  bottom: "conv2_1_A_wheat"
  top: "conv2_2_A_wheat"
  name: "conv2_2_A_wheat"
  type: "Convolution"
  param {
    lr_mult: 2
    decay_mult: 0
  }
  param {
    lr_mult: 3
    decay_mult: 0
  } 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 15
  weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2_2_A_wheat"
  top: "conv2_2_A_wheat"
  name: "relu2_2_A_wheat"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_A_wheat"
  top: "pool5_A_A_wheat"
  name: "pool5_A_A_wheat"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 15
    stride: 15
  }
}
#####feature_fusion#####
layer {
  name: "reshape1_wheat"
  bottom: "pool5"
  top: "reshape1_wheat"
  type: "Reshape"
  reshape_param {
      shape {
        dim: -1  
        dim: 512
      }
    }
}
layer {
  name: "reshape2_wheat"
  bottom: "pool5_A_A_wheat"
  top: "reshape2_wheat"
  type: "Reshape"
  reshape_param {
      shape {
        dim: -1  
        dim: 512
      }
    }
}
layer {
  name: "pow1_wheat"
  bottom: "reshape1_wheat"
  top: "pow1_wheat"
  type: "Power"
  power_param {
    power: 1
    scale: 0.1
    shift: 0
  }
}
layer {
  name: "pow2_wheat"
  bottom: "reshape2_wheat"
  top: "pow2_wheat"
  type: "Power"
  power_param {
    power: 1
    scale: 0.1
    shift: 0
  }
}
layer {
  name: "scale1+2"
  bottom: "pow2_wheat"
  bottom: "pow1_wheat"
  top: "scale1+2"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "fc2_wheat"
  type: "InnerProduct"
  bottom: "scale1+2"
  top: "fc2_wheat"
  param {
    lr_mult: 3
    decay_mult: 0
  }
  param {
    lr_mult: 4
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc2_wheat"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc2_wheat"
  bottom: "label"
  top: "loss"
}